CCS PCM C Compiler, Version 5.008, 62930               10-oct.-14 01:20

               Filename:   C:\ProyectosMPLABWindows\practica2V2.0\practica2V2.lst

               ROM used:   126 words (2%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           15 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   044
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.3
0018:  GOTO   01B
0019:  BTFSC  0B.0
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <practica2V2.h> 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
.................... #use rs232(baud=9600,parity=N,bits=8,stream=PORT1) 
....................  
.................... #use pwm(CCP1,TIMER=2,FREQUENCY=38000,DUTY=50) 
....................  
....................  
.................... short estadoSensor; 
.................... #INT_RB 
.................... void interrupcionPuertoB(){ 
....................    estadoSensor=input(PIN_B4); 
002F:  BSF    03.5
0030:  BSF    06.4
0031:  BCF    03.5
0032:  BCF    28.0
0033:  BTFSC  06.4
0034:  BSF    28.0
....................    if (estadoSensor==0){ 
0035:  BTFSC  28.0
0036:  GOTO   03C
....................       output_high(PIN_B1); 
0037:  BSF    03.5
0038:  BCF    06.1
0039:  BCF    03.5
003A:  BSF    06.1
....................    } else{ 
003B:  GOTO   040
....................       output_low(PIN_B1); 
003C:  BSF    03.5
003D:  BCF    06.1
003E:  BCF    03.5
003F:  BCF    06.1
....................    } 
....................     
0040:  BCF    0B.0
0041:  BCF    0A.3
0042:  BCF    0A.4
0043:  GOTO   01B
.................... } 
....................  
.................... void main() 
0044:  MOVF   03,W
0045:  ANDLW  1F
0046:  MOVWF  03
0047:  BSF    03.5
0048:  BCF    05.0
0049:  BCF    03.5
004A:  BSF    05.0
004B:  MOVLW  FF
004C:  MOVWF  27
004D:  MOVLW  19
004E:  BSF    03.5
004F:  MOVWF  12
0050:  MOVLW  04
0051:  BCF    03.5
0052:  MOVWF  12
0053:  BCF    27.2
0054:  MOVF   27,W
0055:  BSF    03.5
0056:  MOVWF  07
0057:  MOVLW  0C
0058:  BCF    03.5
0059:  MOVWF  15
005A:  MOVLW  3C
005B:  MOVWF  17
005C:  BSF    03.5
005D:  BSF    1F.0
005E:  BSF    1F.1
005F:  BSF    1F.2
0060:  BCF    1F.3
0061:  MOVLW  07
0062:  MOVWF  1C
0063:  BCF    03.7
.................... { 
....................    set_tris_a(0x01); 
0064:  MOVLW  01
0065:  MOVWF  05
....................    set_tris_b(0x10); 
0066:  MOVLW  10
0067:  MOVWF  06
....................    set_tris_c(0x00); 
0068:  MOVLW  00
0069:  MOVWF  07
006A:  BCF    03.5
006B:  MOVWF  27
....................    output_a(0x00); 
006C:  BSF    03.5
006D:  CLRF   05
006E:  BCF    03.5
006F:  CLRF   05
....................    output_b(0x00); 
0070:  BSF    03.5
0071:  CLRF   06
0072:  BCF    03.5
0073:  CLRF   06
....................    output_c(0x00); 
0074:  MOVWF  27
0075:  BSF    03.5
0076:  CLRF   07
0077:  BCF    03.5
0078:  CLRF   07
....................    ENABLE_INTERRUPTS(INT_RB); 
0079:  BSF    0B.3
....................    ENABLE_INTERRUPTS(GLOBAL); 
007A:  MOVLW  C0
007B:  IORWF  0B,F
....................    while(TRUE) 
....................    { 
007C:  GOTO   07C
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
007D:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
