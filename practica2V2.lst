CCS PCM C Compiler, Version 5.008, 62930               10-oct.-14 03:03

               Filename:   C:\ProyectosMPLABWindows\practica2V2.0\practica2V2.lst

               ROM used:   501 words (6%)
                           Largest free fragment is 2048
               RAM used:   18 (5%) at main() level
                           27 (7%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   1AA
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   030
001B:  BTFSS  0B.3
001C:  GOTO   01F
001D:  BTFSC  0B.0
001E:  GOTO   033
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   036
0033:  BCF    0A.3
0034:  BCF    0A.4
0035:  GOTO   11D
.................... #include <practica2V2.h> 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
*
0051:  MOVF   0B,W
0052:  MOVWF  2E
0053:  BCF    0B.7
0054:  BSF    03.5
0055:  BSF    03.6
0056:  BSF    0C.7
0057:  BSF    0C.0
0058:  NOP
0059:  NOP
005A:  BTFSC  03.0
005B:  GOTO   084
005C:  BCF    03.5
005D:  MOVF   0C,W
005E:  ANDLW  7F
005F:  BCF    03.6
0060:  MOVWF  2F
0061:  BSF    03.6
0062:  MOVF   0D,W
0063:  BCF    03.6
0064:  MOVWF  30
0065:  BSF    03.6
0066:  MOVF   0F,W
0067:  BCF    03.6
0068:  MOVWF  31
0069:  MOVF   2F,W
006A:  BTFSS  0C.4
006B:  GOTO   06A
006C:  MOVWF  19
006D:  MOVF   30,W
006E:  BSF    03.6
006F:  MOVWF  0D
0070:  BCF    03.6
0071:  MOVF   31,W
0072:  BSF    03.6
0073:  MOVWF  0F
0074:  BSF    03.5
0075:  BSF    0C.7
0076:  BSF    0C.0
0077:  NOP
0078:  NOP
0079:  BCF    03.5
007A:  BCF    03.6
007B:  DECFSZ 2D,F
007C:  GOTO   07E
007D:  GOTO   081
007E:  BSF    03.5
007F:  BSF    03.6
0080:  GOTO   084
0081:  GOTO   0A4
0082:  BSF    03.5
0083:  BSF    03.6
0084:  BCF    03.5
0085:  RLF    0C,W
0086:  RLF    0E,W
0087:  ANDLW  7F
0088:  BCF    03.6
0089:  MOVWF  2F
008A:  BSF    03.6
008B:  MOVF   0D,W
008C:  BCF    03.6
008D:  MOVWF  30
008E:  BSF    03.6
008F:  MOVF   0F,W
0090:  BCF    03.6
0091:  MOVWF  31
0092:  MOVF   2F,W
0093:  BTFSS  0C.4
0094:  GOTO   093
0095:  MOVWF  19
0096:  MOVF   30,W
0097:  BSF    03.6
0098:  MOVWF  0D
0099:  BCF    03.6
009A:  MOVF   31,W
009B:  BSF    03.6
009C:  MOVWF  0F
009D:  INCF   0D,F
009E:  BTFSC  03.2
009F:  INCF   0F,F
00A0:  BCF    03.0
00A1:  BCF    03.6
00A2:  DECFSZ 2D,F
00A3:  GOTO   054
00A4:  BTFSC  2E.7
00A5:  BSF    0B.7
00A6:  RETURN
00A7:  CLRF   35
00A8:  MOVF   04,W
00A9:  MOVWF  34
00AA:  BCF    35.0
00AB:  BTFSC  03.7
00AC:  BSF    35.0
00AD:  BTFSS  2E.7
00AE:  GOTO   0B7
00AF:  BSF    34.7
00B0:  BTFSS  34.4
00B1:  INCF   34,F
00B2:  COMF   2D,F
00B3:  COMF   2E,F
00B4:  INCF   2D,F
00B5:  BTFSC  03.2
00B6:  INCF   2E,F
00B7:  SWAPF  2E,W
00B8:  IORLW  F0
00B9:  MOVWF  30
00BA:  ADDWF  30,F
00BB:  ADDLW  E2
00BC:  MOVWF  31
00BD:  ADDLW  32
00BE:  MOVWF  33
00BF:  MOVF   2E,W
00C0:  ANDLW  0F
00C1:  ADDWF  31,F
00C2:  ADDWF  31,F
00C3:  ADDWF  33,F
00C4:  ADDLW  E9
00C5:  MOVWF  32
00C6:  ADDWF  32,F
00C7:  ADDWF  32,F
00C8:  SWAPF  2D,W
00C9:  ANDLW  0F
00CA:  ADDWF  32,F
00CB:  ADDWF  33,F
00CC:  RLF    32,F
00CD:  RLF    33,F
00CE:  COMF   33,F
00CF:  RLF    33,F
00D0:  MOVF   2D,W
00D1:  ANDLW  0F
00D2:  ADDWF  33,F
00D3:  RLF    30,F
00D4:  MOVLW  07
00D5:  MOVWF  2F
00D6:  MOVLW  0A
00D7:  ADDWF  33,F
00D8:  DECF   32,F
00D9:  BTFSS  03.0
00DA:  GOTO   0D7
00DB:  ADDWF  32,F
00DC:  DECF   31,F
00DD:  BTFSS  03.0
00DE:  GOTO   0DB
00DF:  ADDWF  31,F
00E0:  DECF   30,F
00E1:  BTFSS  03.0
00E2:  GOTO   0DF
00E3:  ADDWF  30,F
00E4:  DECF   2F,F
00E5:  BTFSS  03.0
00E6:  GOTO   0E3
00E7:  MOVLW  2F
00E8:  MOVWF  04
00E9:  BCF    03.7
00EA:  MOVLW  07
00EB:  ANDWF  34,W
00EC:  BCF    34.6
00ED:  DECF   04,F
00EE:  ANDWF  34,W
00EF:  BTFSS  03.2
00F0:  GOTO   0F8
00F1:  BTFSC  34.4
00F2:  INCF   04,F
00F3:  BTFSC  34.4
00F4:  GOTO   0F8
00F5:  MOVLW  20
00F6:  MOVWF  77
00F7:  GOTO   115
00F8:  ADDWF  04,F
00F9:  MOVLW  33
00FA:  SUBWF  04,W
00FB:  BTFSC  03.2
00FC:  BSF    34.6
00FD:  MOVF   00,W
00FE:  MOVWF  77
00FF:  BTFSS  03.2
0100:  GOTO   109
0101:  BTFSC  34.6
0102:  GOTO   109
0103:  BTFSC  34.4
0104:  GOTO   119
0105:  BTFSC  34.3
0106:  GOTO   109
0107:  MOVLW  20
0108:  GOTO   114
0109:  BTFSS  34.7
010A:  GOTO   111
010B:  MOVLW  2D
010C:  MOVWF  77
010D:  DECF   04,F
010E:  BCF    34.6
010F:  BCF    34.7
0110:  GOTO   115
0111:  BSF    34.3
0112:  BCF    34.4
0113:  MOVLW  30
0114:  ADDWF  77,F
0115:  MOVF   77,W
0116:  BTFSS  0C.4
0117:  GOTO   116
0118:  MOVWF  19
0119:  INCF   04,F
011A:  BTFSS  34.6
011B:  GOTO   0F9
011C:  RETURN
*
0178:  DATA C4,3A
0179:  DATA F2,30
017A:  DATA E3,34
017B:  DATA 6F,37
017C:  DATA A0,32
017D:  DATA 6E,10
017E:  DATA C5,39
017F:  DATA F4,30
0180:  DATA E4,37
0181:  DATA 20,22
0182:  DATA E5,39
0183:  DATA 62,36
0184:  DATA EF,38
0185:  DATA F5,32
0186:  DATA 61,32
0187:  DATA 6F,10
0188:  DATA 3A,10
0189:  DATA 25,26
018A:  DATA 64,10
018B:  DATA D3,32
018C:  DATA E7,3A
018D:  DATA 6E,32
018E:  DATA EF,39
018F:  DATA 20,05
0190:  DATA 0D,10
0191:  DATA 00,00
0192:  DATA C4,3A
0193:  DATA F2,30
0194:  DATA E3,34
0195:  DATA 6F,37
0196:  DATA A0,32
0197:  DATA 6E,10
0198:  DATA C5,39
0199:  DATA F4,30
019A:  DATA E4,37
019B:  DATA 20,21
019C:  DATA EC,37
019D:  DATA F1,3A
019E:  DATA E5,30
019F:  DATA E4,37
01A0:  DATA 20,1D
01A1:  DATA A0,12
01A2:  DATA 4C,32
01A3:  DATA A0,29
01A4:  DATA E5,33
01A5:  DATA 75,37
01A6:  DATA E4,37
01A7:  DATA 73,10
01A8:  DATA 8A,06
01A9:  DATA 00,00
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
.................... #use rs232(baud=9600, xmit=pin_c6,rcv=pin_c7, parity=N, bits=8) 
.................... #use pwm(CCP1,TIMER=2,FREQUENCY=38000,DUTY=50) 
....................  
....................  
.................... short estadoSensor; 
.................... int16 timer=0; 
.................... int16 segundo=0; 
....................  
.................... #INT_RTCC 
.................... void interrupcionTimer0(){ 
....................    set_timer0(131); 
*
0036:  MOVLW  83
0037:  MOVWF  01
....................    timer++; 
0038:  INCF   29,F
0039:  BTFSC  03.2
003A:  INCF   2A,F
....................    if (timer==8000){ 
003B:  MOVF   29,W
003C:  SUBLW  40
003D:  BTFSS  03.2
003E:  GOTO   04D
003F:  MOVF   2A,W
0040:  SUBLW  1F
0041:  BTFSS  03.2
0042:  GOTO   04D
....................       output_toggle(PIN_B2); 
0043:  BSF    03.5
0044:  BCF    06.2
0045:  MOVLW  04
0046:  BCF    03.5
0047:  XORWF  06,F
....................       segundo++; 
0048:  INCF   2B,F
0049:  BTFSC  03.2
004A:  INCF   2C,F
....................       timer=0; 
004B:  CLRF   2A
004C:  CLRF   29
....................    } 
.................... } 
....................  
004D:  BCF    0B.2
004E:  BCF    0A.3
004F:  BCF    0A.4
0050:  GOTO   01F
.................... #INT_RB 
.................... void interrupcionPuertoB(){ 
....................    estadoSensor=input(PIN_B4); 
*
011D:  BSF    03.5
011E:  BSF    06.4
011F:  BCF    03.5
0120:  BCF    28.0
0121:  BTFSC  06.4
0122:  BSF    28.0
....................    if (estadoSensor==0){ 
0123:  BTFSC  28.0
0124:  GOTO   14D
....................       output_high(PIN_B1); 
0125:  BSF    03.5
0126:  BCF    06.1
0127:  BCF    03.5
0128:  BSF    06.1
....................       if (segundo !=0 ){ 
0129:  MOVF   2B,F
012A:  BTFSS  03.2
012B:  GOTO   12F
012C:  MOVF   2C,F
012D:  BTFSC  03.2
012E:  GOTO   14C
....................          printf("Duracion en Estado Desbloqueado : %Ld Segundos \n\r " , segundo); 
012F:  MOVLW  78
0130:  BSF    03.6
0131:  MOVWF  0D
0132:  MOVLW  01
0133:  MOVWF  0F
0134:  BCF    03.0
0135:  MOVLW  22
0136:  BCF    03.6
0137:  MOVWF  2D
0138:  CALL   051
0139:  MOVLW  10
013A:  MOVWF  04
013B:  MOVF   2C,W
013C:  MOVWF  2E
013D:  MOVF   2B,W
013E:  MOVWF  2D
013F:  CALL   0A7
0140:  MOVLW  8A
0141:  BSF    03.6
0142:  MOVWF  0D
0143:  MOVLW  01
0144:  MOVWF  0F
0145:  BSF    03.0
0146:  MOVLW  0D
0147:  BCF    03.6
0148:  MOVWF  2D
0149:  CALL   051
....................          segundo=0; 
014A:  CLRF   2C
014B:  CLRF   2B
....................       }  
....................    } else{ 
014C:  GOTO   174
....................       output_low(PIN_B1); 
014D:  BSF    03.5
014E:  BCF    06.1
014F:  BCF    03.5
0150:  BCF    06.1
....................       if (segundo != 0){ 
0151:  MOVF   2B,F
0152:  BTFSS  03.2
0153:  GOTO   157
0154:  MOVF   2C,F
0155:  BTFSC  03.2
0156:  GOTO   174
....................          printf("Duracion en Estado Bloqueado : %Ld Segundos \n\r" , segundo); 
0157:  MOVLW  92
0158:  BSF    03.6
0159:  MOVWF  0D
015A:  MOVLW  01
015B:  MOVWF  0F
015C:  BCF    03.0
015D:  MOVLW  1F
015E:  BCF    03.6
015F:  MOVWF  2D
0160:  CALL   051
0161:  MOVLW  10
0162:  MOVWF  04
0163:  MOVF   2C,W
0164:  MOVWF  2E
0165:  MOVF   2B,W
0166:  MOVWF  2D
0167:  CALL   0A7
0168:  MOVLW  A3
0169:  BSF    03.6
016A:  MOVWF  0D
016B:  MOVLW  01
016C:  MOVWF  0F
016D:  BCF    03.0
016E:  MOVLW  0C
016F:  BCF    03.6
0170:  MOVWF  2D
0171:  CALL   051
....................          segundo=0; 
0172:  CLRF   2C
0173:  CLRF   2B
....................       } 
....................    } 
....................     
0174:  BCF    0B.0
0175:  BCF    0A.3
0176:  BCF    0A.4
0177:  GOTO   01F
.................... } 
....................  
.................... void main() 
*
01AA:  MOVF   03,W
01AB:  ANDLW  1F
01AC:  MOVWF  03
01AD:  MOVLW  19
01AE:  BSF    03.5
01AF:  MOVWF  19
01B0:  MOVLW  A6
01B1:  MOVWF  18
01B2:  MOVLW  90
01B3:  BCF    03.5
01B4:  MOVWF  18
01B5:  MOVLW  FF
01B6:  MOVWF  27
01B7:  MOVLW  19
01B8:  BSF    03.5
01B9:  MOVWF  12
01BA:  MOVLW  04
01BB:  BCF    03.5
01BC:  MOVWF  12
01BD:  BCF    27.2
01BE:  MOVF   27,W
01BF:  BSF    03.5
01C0:  MOVWF  07
01C1:  MOVLW  0C
01C2:  BCF    03.5
01C3:  MOVWF  15
01C4:  MOVLW  3C
01C5:  MOVWF  17
01C6:  CLRF   2A
01C7:  CLRF   29
01C8:  CLRF   2C
01C9:  CLRF   2B
01CA:  BSF    03.5
01CB:  BSF    1F.0
01CC:  BSF    1F.1
01CD:  BSF    1F.2
01CE:  BCF    1F.3
01CF:  MOVLW  07
01D0:  MOVWF  1C
01D1:  BCF    03.7
.................... { 
....................    set_tris_a(0x01); 
01D2:  MOVLW  01
01D3:  MOVWF  05
....................    set_tris_b(0x10); 
01D4:  MOVLW  10
01D5:  MOVWF  06
....................    set_tris_c(0x00); 
01D6:  MOVLW  00
01D7:  MOVWF  07
01D8:  BCF    03.5
01D9:  MOVWF  27
....................    output_a(0x00); 
01DA:  BSF    03.5
01DB:  CLRF   05
01DC:  BCF    03.5
01DD:  CLRF   05
....................    output_b(0x00); 
01DE:  BSF    03.5
01DF:  CLRF   06
01E0:  BCF    03.5
01E1:  CLRF   06
....................    output_c(0x00); 
01E2:  MOVWF  27
01E3:  BSF    03.5
01E4:  CLRF   07
01E5:  BCF    03.5
01E6:  CLRF   07
....................    ENABLE_INTERRUPTS(INT_RB); 
01E7:  BSF    0B.3
....................    ENABLE_INTERRUPTS(INT_RTCC); 
01E8:  BSF    0B.5
....................    ENABLE_INTERRUPTS(GLOBAL); 
01E9:  MOVLW  C0
01EA:  IORWF  0B,F
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_1); 
01EB:  BSF    03.5
01EC:  MOVF   01,W
01ED:  ANDLW  C7
01EE:  IORLW  08
01EF:  MOVWF  01
....................    set_timer0(131); 
01F0:  MOVLW  83
01F1:  BCF    03.5
01F2:  MOVWF  01
....................     
....................    while(TRUE) 
....................    { 
01F3:  GOTO   1F3
....................       //TODO: User Code 
....................        
....................    } 
....................  
.................... } 
01F4:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
