CCS PCM C Compiler, Version 5.008, 62930               10-oct.-14 03:18

               Filename:   C:\ProyectosMPLABWindows\practica2V2.0\practica2V2.lst

               ROM used:   527 words (6%)
                           Largest free fragment is 2048
               RAM used:   18 (5%) at main() level
                           27 (7%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   1BC
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   030
001B:  BTFSS  0B.3
001C:  GOTO   01F
001D:  BTFSC  0B.0
001E:  GOTO   033
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   036
0033:  BCF    0A.3
0034:  BCF    0A.4
0035:  GOTO   11F
.................... #include <practica2V2.h> 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
*
0053:  MOVF   0B,W
0054:  MOVWF  2E
0055:  BCF    0B.7
0056:  BSF    03.5
0057:  BSF    03.6
0058:  BSF    0C.7
0059:  BSF    0C.0
005A:  NOP
005B:  NOP
005C:  BTFSC  03.0
005D:  GOTO   086
005E:  BCF    03.5
005F:  MOVF   0C,W
0060:  ANDLW  7F
0061:  BCF    03.6
0062:  MOVWF  2F
0063:  BSF    03.6
0064:  MOVF   0D,W
0065:  BCF    03.6
0066:  MOVWF  30
0067:  BSF    03.6
0068:  MOVF   0F,W
0069:  BCF    03.6
006A:  MOVWF  31
006B:  MOVF   2F,W
006C:  BTFSS  0C.4
006D:  GOTO   06C
006E:  MOVWF  19
006F:  MOVF   30,W
0070:  BSF    03.6
0071:  MOVWF  0D
0072:  BCF    03.6
0073:  MOVF   31,W
0074:  BSF    03.6
0075:  MOVWF  0F
0076:  BSF    03.5
0077:  BSF    0C.7
0078:  BSF    0C.0
0079:  NOP
007A:  NOP
007B:  BCF    03.5
007C:  BCF    03.6
007D:  DECFSZ 2D,F
007E:  GOTO   080
007F:  GOTO   083
0080:  BSF    03.5
0081:  BSF    03.6
0082:  GOTO   086
0083:  GOTO   0A6
0084:  BSF    03.5
0085:  BSF    03.6
0086:  BCF    03.5
0087:  RLF    0C,W
0088:  RLF    0E,W
0089:  ANDLW  7F
008A:  BCF    03.6
008B:  MOVWF  2F
008C:  BSF    03.6
008D:  MOVF   0D,W
008E:  BCF    03.6
008F:  MOVWF  30
0090:  BSF    03.6
0091:  MOVF   0F,W
0092:  BCF    03.6
0093:  MOVWF  31
0094:  MOVF   2F,W
0095:  BTFSS  0C.4
0096:  GOTO   095
0097:  MOVWF  19
0098:  MOVF   30,W
0099:  BSF    03.6
009A:  MOVWF  0D
009B:  BCF    03.6
009C:  MOVF   31,W
009D:  BSF    03.6
009E:  MOVWF  0F
009F:  INCF   0D,F
00A0:  BTFSC  03.2
00A1:  INCF   0F,F
00A2:  BCF    03.0
00A3:  BCF    03.6
00A4:  DECFSZ 2D,F
00A5:  GOTO   056
00A6:  BTFSC  2E.7
00A7:  BSF    0B.7
00A8:  RETURN
00A9:  CLRF   35
00AA:  MOVF   04,W
00AB:  MOVWF  34
00AC:  BCF    35.0
00AD:  BTFSC  03.7
00AE:  BSF    35.0
00AF:  BTFSS  2E.7
00B0:  GOTO   0B9
00B1:  BSF    34.7
00B2:  BTFSS  34.4
00B3:  INCF   34,F
00B4:  COMF   2D,F
00B5:  COMF   2E,F
00B6:  INCF   2D,F
00B7:  BTFSC  03.2
00B8:  INCF   2E,F
00B9:  SWAPF  2E,W
00BA:  IORLW  F0
00BB:  MOVWF  30
00BC:  ADDWF  30,F
00BD:  ADDLW  E2
00BE:  MOVWF  31
00BF:  ADDLW  32
00C0:  MOVWF  33
00C1:  MOVF   2E,W
00C2:  ANDLW  0F
00C3:  ADDWF  31,F
00C4:  ADDWF  31,F
00C5:  ADDWF  33,F
00C6:  ADDLW  E9
00C7:  MOVWF  32
00C8:  ADDWF  32,F
00C9:  ADDWF  32,F
00CA:  SWAPF  2D,W
00CB:  ANDLW  0F
00CC:  ADDWF  32,F
00CD:  ADDWF  33,F
00CE:  RLF    32,F
00CF:  RLF    33,F
00D0:  COMF   33,F
00D1:  RLF    33,F
00D2:  MOVF   2D,W
00D3:  ANDLW  0F
00D4:  ADDWF  33,F
00D5:  RLF    30,F
00D6:  MOVLW  07
00D7:  MOVWF  2F
00D8:  MOVLW  0A
00D9:  ADDWF  33,F
00DA:  DECF   32,F
00DB:  BTFSS  03.0
00DC:  GOTO   0D9
00DD:  ADDWF  32,F
00DE:  DECF   31,F
00DF:  BTFSS  03.0
00E0:  GOTO   0DD
00E1:  ADDWF  31,F
00E2:  DECF   30,F
00E3:  BTFSS  03.0
00E4:  GOTO   0E1
00E5:  ADDWF  30,F
00E6:  DECF   2F,F
00E7:  BTFSS  03.0
00E8:  GOTO   0E5
00E9:  MOVLW  2F
00EA:  MOVWF  04
00EB:  BCF    03.7
00EC:  MOVLW  07
00ED:  ANDWF  34,W
00EE:  BCF    34.6
00EF:  DECF   04,F
00F0:  ANDWF  34,W
00F1:  BTFSS  03.2
00F2:  GOTO   0FA
00F3:  BTFSC  34.4
00F4:  INCF   04,F
00F5:  BTFSC  34.4
00F6:  GOTO   0FA
00F7:  MOVLW  20
00F8:  MOVWF  77
00F9:  GOTO   117
00FA:  ADDWF  04,F
00FB:  MOVLW  33
00FC:  SUBWF  04,W
00FD:  BTFSC  03.2
00FE:  BSF    34.6
00FF:  MOVF   00,W
0100:  MOVWF  77
0101:  BTFSS  03.2
0102:  GOTO   10B
0103:  BTFSC  34.6
0104:  GOTO   10B
0105:  BTFSC  34.4
0106:  GOTO   11B
0107:  BTFSC  34.3
0108:  GOTO   10B
0109:  MOVLW  20
010A:  GOTO   116
010B:  BTFSS  34.7
010C:  GOTO   113
010D:  MOVLW  2D
010E:  MOVWF  77
010F:  DECF   04,F
0110:  BCF    34.6
0111:  BCF    34.7
0112:  GOTO   117
0113:  BSF    34.3
0114:  BCF    34.4
0115:  MOVLW  30
0116:  ADDWF  77,F
0117:  MOVF   77,W
0118:  BTFSS  0C.4
0119:  GOTO   118
011A:  MOVWF  19
011B:  INCF   04,F
011C:  BTFSS  34.6
011D:  GOTO   0FB
011E:  RETURN
*
018A:  DATA C4,3A
018B:  DATA F2,30
018C:  DATA E3,34
018D:  DATA 6F,37
018E:  DATA A0,32
018F:  DATA 6E,10
0190:  DATA C5,39
0191:  DATA F4,30
0192:  DATA E4,37
0193:  DATA 20,22
0194:  DATA E5,39
0195:  DATA 62,36
0196:  DATA EF,38
0197:  DATA F5,32
0198:  DATA 61,32
0199:  DATA 6F,10
019A:  DATA 3A,10
019B:  DATA 25,26
019C:  DATA 64,10
019D:  DATA D3,32
019E:  DATA E7,3A
019F:  DATA 6E,32
01A0:  DATA EF,39
01A1:  DATA 20,05
01A2:  DATA 0D,10
01A3:  DATA 00,00
01A4:  DATA C4,3A
01A5:  DATA F2,30
01A6:  DATA E3,34
01A7:  DATA 6F,37
01A8:  DATA A0,32
01A9:  DATA 6E,10
01AA:  DATA C5,39
01AB:  DATA F4,30
01AC:  DATA E4,37
01AD:  DATA 20,21
01AE:  DATA EC,37
01AF:  DATA F1,3A
01B0:  DATA E5,30
01B1:  DATA E4,37
01B2:  DATA 20,1D
01B3:  DATA A0,12
01B4:  DATA 4C,32
01B5:  DATA A0,29
01B6:  DATA E5,33
01B7:  DATA 75,37
01B8:  DATA E4,37
01B9:  DATA 73,10
01BA:  DATA 8A,06
01BB:  DATA 00,00
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
.................... #use rs232(baud=9600, xmit=pin_c6,rcv=pin_c7, parity=N, bits=8) 
.................... #use pwm(CCP1,TIMER=2,FREQUENCY=38000,DUTY=50) 
....................  
....................  
.................... short estadoSensor; 
.................... int16 timer=0; 
.................... int16 segundo=0; 
.................... short frec = false; 
....................  
.................... #INT_RTCC 
.................... void interrupcionTimer0(){ 
....................    set_timer0(131); 
*
0036:  MOVLW  83
0037:  MOVWF  01
....................    frec = !frec; 
0038:  MOVLW  02
0039:  XORWF  28,F
....................    timer++; 
003A:  INCF   29,F
003B:  BTFSC  03.2
003C:  INCF   2A,F
....................    if (timer==8000){ 
003D:  MOVF   29,W
003E:  SUBLW  40
003F:  BTFSS  03.2
0040:  GOTO   04F
0041:  MOVF   2A,W
0042:  SUBLW  1F
0043:  BTFSS  03.2
0044:  GOTO   04F
....................       output_toggle(PIN_B2); 
0045:  BSF    03.5
0046:  BCF    06.2
0047:  MOVLW  04
0048:  BCF    03.5
0049:  XORWF  06,F
....................       segundo++; 
004A:  INCF   2B,F
004B:  BTFSC  03.2
004C:  INCF   2C,F
....................       timer=0; 
004D:  CLRF   2A
004E:  CLRF   29
....................    } 
.................... } 
....................  
004F:  BCF    0B.2
0050:  BCF    0A.3
0051:  BCF    0A.4
0052:  GOTO   01F
.................... #INT_RB 
.................... void interrupcionPuertoB(){ 
....................    estadoSensor=input(PIN_B4); 
*
011F:  BSF    03.5
0120:  BSF    06.4
0121:  BCF    03.5
0122:  BCF    28.0
0123:  BTFSC  06.4
0124:  BSF    28.0
....................    if (estadoSensor==0){ 
0125:  BTFSC  28.0
0126:  GOTO   157
....................       output_high(PIN_B1); 
0127:  BSF    03.5
0128:  BCF    06.1
0129:  BCF    03.5
012A:  BSF    06.1
....................       output_low(PIN_A1); 
012B:  BSF    03.5
012C:  BCF    05.1
012D:  BCF    03.5
012E:  BCF    05.1
....................       output_low(PIN_A2); 
012F:  BSF    03.5
0130:  BCF    05.2
0131:  BCF    03.5
0132:  BCF    05.2
....................       if (segundo !=0 ){ 
0133:  MOVF   2B,F
0134:  BTFSS  03.2
0135:  GOTO   139
0136:  MOVF   2C,F
0137:  BTFSC  03.2
0138:  GOTO   156
....................          printf("Duracion en Estado Desbloqueado : %Ld Segundos \n\r " , segundo); 
0139:  MOVLW  8A
013A:  BSF    03.6
013B:  MOVWF  0D
013C:  MOVLW  01
013D:  MOVWF  0F
013E:  BCF    03.0
013F:  MOVLW  22
0140:  BCF    03.6
0141:  MOVWF  2D
0142:  CALL   053
0143:  MOVLW  10
0144:  MOVWF  04
0145:  MOVF   2C,W
0146:  MOVWF  2E
0147:  MOVF   2B,W
0148:  MOVWF  2D
0149:  CALL   0A9
014A:  MOVLW  9C
014B:  BSF    03.6
014C:  MOVWF  0D
014D:  MOVLW  01
014E:  MOVWF  0F
014F:  BSF    03.0
0150:  MOVLW  0D
0151:  BCF    03.6
0152:  MOVWF  2D
0153:  CALL   053
....................          segundo=0; 
0154:  CLRF   2C
0155:  CLRF   2B
....................       }  
....................    } else{ 
0156:  GOTO   186
....................       output_low(PIN_B1); 
0157:  BSF    03.5
0158:  BCF    06.1
0159:  BCF    03.5
015A:  BCF    06.1
....................       output_high(PIN_A1); 
015B:  BSF    03.5
015C:  BCF    05.1
015D:  BCF    03.5
015E:  BSF    05.1
....................       output_low(PIN_A2); 
015F:  BSF    03.5
0160:  BCF    05.2
0161:  BCF    03.5
0162:  BCF    05.2
....................       if (segundo != 0){ 
0163:  MOVF   2B,F
0164:  BTFSS  03.2
0165:  GOTO   169
0166:  MOVF   2C,F
0167:  BTFSC  03.2
0168:  GOTO   186
....................          printf("Duracion en Estado Bloqueado : %Ld Segundos \n\r" , segundo); 
0169:  MOVLW  A4
016A:  BSF    03.6
016B:  MOVWF  0D
016C:  MOVLW  01
016D:  MOVWF  0F
016E:  BCF    03.0
016F:  MOVLW  1F
0170:  BCF    03.6
0171:  MOVWF  2D
0172:  CALL   053
0173:  MOVLW  10
0174:  MOVWF  04
0175:  MOVF   2C,W
0176:  MOVWF  2E
0177:  MOVF   2B,W
0178:  MOVWF  2D
0179:  CALL   0A9
017A:  MOVLW  B5
017B:  BSF    03.6
017C:  MOVWF  0D
017D:  MOVLW  01
017E:  MOVWF  0F
017F:  BCF    03.0
0180:  MOVLW  0C
0181:  BCF    03.6
0182:  MOVWF  2D
0183:  CALL   053
....................          segundo=0; 
0184:  CLRF   2C
0185:  CLRF   2B
....................       } 
....................    } 
....................     
0186:  BCF    0B.0
0187:  BCF    0A.3
0188:  BCF    0A.4
0189:  GOTO   01F
.................... } 
....................  
.................... void main() 
*
01BC:  MOVF   03,W
01BD:  ANDLW  1F
01BE:  MOVWF  03
01BF:  MOVLW  19
01C0:  BSF    03.5
01C1:  MOVWF  19
01C2:  MOVLW  A6
01C3:  MOVWF  18
01C4:  MOVLW  90
01C5:  BCF    03.5
01C6:  MOVWF  18
01C7:  MOVLW  FF
01C8:  MOVWF  27
01C9:  MOVLW  19
01CA:  BSF    03.5
01CB:  MOVWF  12
01CC:  MOVLW  04
01CD:  BCF    03.5
01CE:  MOVWF  12
01CF:  BCF    27.2
01D0:  MOVF   27,W
01D1:  BSF    03.5
01D2:  MOVWF  07
01D3:  MOVLW  0C
01D4:  BCF    03.5
01D5:  MOVWF  15
01D6:  MOVLW  3C
01D7:  MOVWF  17
01D8:  CLRF   2A
01D9:  CLRF   29
01DA:  CLRF   2C
01DB:  CLRF   2B
01DC:  BCF    28.1
01DD:  BSF    03.5
01DE:  BSF    1F.0
01DF:  BSF    1F.1
01E0:  BSF    1F.2
01E1:  BCF    1F.3
01E2:  MOVLW  07
01E3:  MOVWF  1C
01E4:  BCF    03.7
.................... { 
....................    set_tris_a(0x01); 
01E5:  MOVLW  01
01E6:  MOVWF  05
....................    set_tris_b(0x10); 
01E7:  MOVLW  10
01E8:  MOVWF  06
....................    set_tris_c(0x00); 
01E9:  MOVLW  00
01EA:  MOVWF  07
01EB:  BCF    03.5
01EC:  MOVWF  27
....................    output_a(0x00); 
01ED:  BSF    03.5
01EE:  CLRF   05
01EF:  BCF    03.5
01F0:  CLRF   05
....................    output_b(0x00); 
01F1:  BSF    03.5
01F2:  CLRF   06
01F3:  BCF    03.5
01F4:  CLRF   06
....................    output_c(0x00); 
01F5:  MOVWF  27
01F6:  BSF    03.5
01F7:  CLRF   07
01F8:  BCF    03.5
01F9:  CLRF   07
....................    ENABLE_INTERRUPTS(INT_RB); 
01FA:  BSF    0B.3
....................    ENABLE_INTERRUPTS(INT_RTCC); 
01FB:  BSF    0B.5
....................    ENABLE_INTERRUPTS(GLOBAL); 
01FC:  MOVLW  C0
01FD:  IORWF  0B,F
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_1); 
01FE:  BSF    03.5
01FF:  MOVF   01,W
0200:  ANDLW  C7
0201:  IORLW  08
0202:  MOVWF  01
....................    set_timer0(131); 
0203:  MOVLW  83
0204:  BCF    03.5
0205:  MOVWF  01
....................     
....................    while(TRUE) 
....................    { 
....................       //TODO: User Code 
....................       if (frec=true){ 
0206:  BSF    28.1
....................          output_high(PIN_C0); 
0207:  BCF    27.0
0208:  MOVF   27,W
0209:  BSF    03.5
020A:  MOVWF  07
020B:  BCF    03.5
020C:  BSF    07.0
....................       } else{ 
....................          output_low(PIN_C0); 
....................       } 
020D:  GOTO   206
....................        
....................    } 
....................  
.................... } 
020E:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
